/*
 * This file is generated by jOOQ.
 */
package app.cta4j.jooq.tables.records;


import app.cta4j.jooq.tables.RouteStop;
import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RouteStopRecord extends UpdatableRecordImpl<RouteStopRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.route_stop.route_id</code>.
     */
    public void setRouteId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.route_stop.route_id</code>.
     */
    public String getRouteId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.route_stop.direction_id</code>.
     */
    public void setDirectionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.route_stop.direction_id</code>.
     */
    public Integer getDirectionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.route_stop.stop_id</code>.
     */
    public void setStopId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.route_stop.stop_id</code>.
     */
    public Integer getStopId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouteStopRecord
     */
    public RouteStopRecord() {
        super(RouteStop.ROUTE_STOP);
    }

    /**
     * Create a detached, initialised RouteStopRecord
     */
    public RouteStopRecord(String routeId, Integer directionId, Integer stopId) {
        super(RouteStop.ROUTE_STOP);

        setRouteId(routeId);
        setDirectionId(directionId);
        setStopId(stopId);
        resetChangedOnNotNull();
    }
}
